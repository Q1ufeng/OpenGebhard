DROP TABLE stock;
DROP TABLE reader;
DROP TABLE to_borrow;
DROP TABLE borrowed;
DROP TABLE giveback;
DROP TABLE reader_stock;
DROP TABLE purchase;
DROP TABLE book_info;
CREATE TABLE stock (id integer,book_name varchar(35),book_num integer,price integer);
CREATE TABLE reader (id integer,reader_name varchar(35),address varchar(35),deposit integer,cost integer);
CREATE TABLE to_borrow(id integer,reader_id integer,book_id integer,borrow_num integer,dealt bool);
CREATE TABLE borrowed(id integer,reader_id integer,book_id integer,book_num integer);
CREATE TABLE giveback(id integer,reader_id integer,dealt bool);
CREATE TABLE reader_stock(id integer,book_id integer,book_num integer,CONSTRAINT CONS1 UNIQUE (id, book_id));
CREATE TABLE purchase(id integer,book_id integer,book_num integer,dealt bool);
CREATE TABLE book_info(id integer,name varchar(35));
CREATE OR REPLACE FUNCTION borrow_request()                    RETURNS VOID AS $$                    DECLARE                        can_borrow BOOLEAN;                    BEGIN                        CREATE TEMP TABLE temp_joined_table AS                        WITH joined_table AS (                            SELECT                                to_borrow.id AS to_borrow_id,                                to_borrow.reader_id AS reader_id,                                to_borrow.book_id AS book_id,                                i.name AS book_name,                                to_borrow.borrow_num AS borrow_num,                                s.book_num AS book_num,                                r.cost AS cost,                                r.deposit AS deposit,                                s.price AS price                            FROM to_borrow                            JOIN public.reader r ON r.id = to_borrow.reader_id                            JOIN public.book_info i ON i.id = to_borrow.book_id                            JOIN stock s ON s.book_name = i.name                            WHERE to_borrow.dealt = FALSE                        )                        SELECT * FROM joined_table;                                            SELECT EXISTS (                            SELECT 1                            FROM temp_joined_table                            WHERE book_num >= borrow_num AND deposit - cost - price * borrow_num >= 0                        )                        INTO can_borrow;                                            IF can_borrow THEN                            UPDATE to_borrow                            SET dealt = TRUE                            WHERE id IN (                                SELECT to_borrow_id                                FROM temp_joined_table                            );                                                INSERT INTO borrowed(id, reader_id, book_id, book_num)                            SELECT to_borrow_id, reader_id, book_id, borrow_num                            FROM temp_joined_table;                                                UPDATE reader                            SET cost = cost + (                                SELECT SUM(borrow_num * price)                                FROM temp_joined_table                            )                            WHERE reader.id IN (                                SELECT reader_id                                FROM temp_joined_table                            );                                                UPDATE stock                            SET book_num = stock.book_num - subquery.borrow_num                            FROM (                                SELECT book_name, borrow_num                                FROM temp_joined_table                            ) AS subquery                            WHERE stock.book_name = subquery.book_name;                                                INSERT INTO reader_stock (id, book_id, book_num)                            SELECT reader_id, book_id, SUM(borrow_num)                            FROM temp_joined_table                            GROUP BY reader_id, book_id                            ON CONFLICT (id, book_id)                            DO UPDATE                            SET book_num = reader_stock.book_num + EXCLUDED.book_num;                                            ELSE                            UPDATE to_borrow                            SET dealt = 'true'                            WHERE id IN (                                SELECT to_borrow_id                                FROM temp_joined_table                            );                        END IF;                    DROP TABLE temp_joined_table;                    END;                    $$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION giveback_request()                    RETURNS VOID AS $$                    DECLARE                        has_book BOOLEAN;                    BEGIN                        CREATE TEMP TABLE temp_joined_table AS                        WITH joined_table AS (                            SELECT                                giveback.id AS giveback_id,                                giveback.reader_id AS reader_id,                                rs.book_id AS book_id,                                rs.book_num AS book_num,                                I.name AS book_name,                                s.price AS price                            FROM giveback                            JOIN reader_stock rs ON rs.id = giveback.reader_id                            JOIN book_info i ON rs.book_id = i.id                            JOIN stock s ON rs.book_id = i.id                            WHERE giveback.dealt = FALSE                        )                        SELECT * FROM joined_table;                                            SELECT EXISTS(                            SELECT 1                            FROM temp_joined_table                        )                        INTO has_book;                                            IF has_book THEN                            DELETE FROM reader_stock                            WHERE reader_stock.id IN (                                SELECT reader_id                                FROM temp_joined_table                                );                                                UPDATE reader                            SET cost = cost - (                                SELECT SUM(book_num*price)                                FROM temp_joined_table                                WHERE temp_joined_table.reader_id = reader.id                                )                            WHERE reader.reader_name IN (                                SELECT reader_name                                FROM temp_joined_table                                );                                                UPDATE stock                            SET book_num = book_num + (                                SELECT SUM(book_num)                                FROM temp_joined_table                                WHERE temp_joined_table.book_name = stock.book_name                                )                            WHERE stock.book_name IN (                                SELECT book_name                                FROM temp_joined_table                                );                                                UPDATE giveback                            SET dealt = TRUE                            WHERE id IN (                                SELECT giveback_id                                FROM temp_joined_table                                );                        ELSE                            UPDATE giveback                            SET dealt = TRUE                            WHERE id IN (                                SELECT giveback_id                                FROM temp_joined_table                                );                        END IF;                    DROP TABLE temp_joined_table;                    END;                    $$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION purchase_request()                    RETURNS VOID AS $$                        BEGIN                            CREATE TEMP TABLE temp_joined_table AS                            WITH joined_table AS (                                SELECT                                    purchase.book_id AS book_id,                                    purchase.book_num AS book_num,                                    i.name AS book_name                                FROM purchase                                JOIN book_info i ON i.id = purchase.book_id                                WHERE purchase.dealt = FALSE                            )                            SELECT * FROM joined_table;                            UPDATE stock                            SET book_num = book_num + (                                SELECT SUM(book_num)                                FROM temp_joined_table                                )                            WHERE stock.book_name IN (                                SELECT book_name                                FROM temp_joined_table                                );                            UPDATE purchase                            SET dealt = TRUE                            WHERE id >= 0;                        DROP TABLE temp_joined_table;                        END;                    $$ LANGUAGE plpgsql;
